apiVersion: apps/v1
kind: Deployment
metadata:
  name: laravel-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: laravel-app
  template:
    metadata:
      labels:
        app: laravel-app
    spec:
      volumes:
        - name: logs
          emptyDir: {}
        - name: views
          emptyDir: {}
      securityContext:
        fsGroup: 82
      initContainers:
        - name: database-migrations
          image: backend
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secret
          command:
            - "php"
          args:
            - "artisan"
            - "migrate"
            - "--force"
      containers:
        - name: nginx
          imagePullPolicy: IfNotPresent
          image: frontend
          resources: {}
            # limits:
            #   cpu: 500m
            #   memory: 50M
          ports:
            - containerPort: 80
        - name: fpm
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secret
          securityContext:
            runAsUser: 82
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: logs
              mountPath: /var/www/html/storage/logs
            - name: views
              mountPath: /var/www/html/storage/framework/views
          resources: {}
          image: backend
          ports:
            - containerPort: 9000

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: laravel-app-service
  name: laravel-app-service
spec:
  type: NodePort
  selector:
    app: laravel-app
  ports:
  - name: targetport
    port: 80
    protocol: TCP
    targetPort: 80
    nodePort: 30007